{"ast":null,"code":"var _jsxFileName = \"/Users/davidsadowsky/Development/TrendInvestWeb/ui/src/Components/InputForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport data from '../assets/crypto_data';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    backgroundColor: 'white',\n    padding: theme.spacing(5),\n    borderRadius: 5,\n    boxShadow: '0px 0px 10px 3px rgba(0, 0, 0, .3)',\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    color: 'white',\n    boxShadow: 'none',\n    textTransform: 'none',\n    fontSize: 14,\n    paddingLeft: theme.spacing(20),\n    paddingRight: theme.spacing(20),\n    border: '1px solid',\n    lineHeight: 1.5,\n    backgroundColor: '#1652F0',\n    borderColor: '#0063cc',\n    fontFamily: 'Red Hat Display',\n    '&:hover': {\n      backgroundColor: '#0069d9',\n      borderColor: '#0062cc',\n      boxShadow: 'none'\n    },\n    '&:active': {\n      boxShadow: 'none',\n      backgroundColor: '#0062cc',\n      borderColor: '#005cbf'\n    },\n    '&:focus': {\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)'\n    },\n    '&:disabled': {\n      backgroundColor: '#bababa',\n      borderColor: '#bababa'\n    }\n  },\n  buttonSmall: {\n    color: 'white',\n    boxShadow: 'none',\n    textTransform: 'none',\n    fontSize: 14,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    border: '1px solid',\n    lineHeight: 1.5,\n    backgroundColor: '#1652F0',\n    borderColor: '#0063cc',\n    fontFamily: 'Red Hat Display',\n    '&:hover': {\n      backgroundColor: '#0069d9',\n      borderColor: '#0062cc',\n      boxShadow: 'none'\n    },\n    '&:active': {\n      boxShadow: 'none',\n      backgroundColor: '#0062cc',\n      borderColor: '#005cbf'\n    },\n    '&:focus': {\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)'\n    },\n    '&:disabled': {\n      backgroundColor: '#bababa',\n      borderColor: '#bababa'\n    }\n  }\n}));\n\nconst InputForm = ({\n  setData,\n  setIsLoading\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [selection, setSelection] = useState('');\n\n  const selectCoin = params => {\n    setSelection(params.inputProps.value);\n    return /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      fontFamily: \"Red Hat Display\",\n      label: \"Coin\",\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }, this);\n  };\n\n  const getPrediction = () => {\n    setIsLoading(true);\n    var interval = setInterval(async function () {\n      fetch('/predict?coinName=' + selection, {\n        method: \"GET\",\n        mode: \"cors\"\n      }).then(res => res.json().then(data => {\n        if (data.data !== 'Job running' && data.data !== 'Job started') {\n          setData(data.data);\n          setIsLoading(false);\n          clearInterval(interval);\n        } else {\n          console.log(data);\n        }\n      }).catch(error => {\n        console.error('Error:', error);\n        setIsLoading(false);\n      }));\n    }, 2000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Hidden, {\n        xsDown: true,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"combo-box-demo\",\n          options: data,\n          getOptionLabel: option => option.title,\n          style: {\n            width: 300\n          },\n          renderInput: params => selectCoin(params)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        smUp: true,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"combo-box-demo\",\n          options: data,\n          getOptionLabel: option => option.title,\n          style: {\n            width: 200\n          },\n          renderInput: params => selectCoin(params)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        paddingTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Hidden, {\n        xsDown: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          disabled: selection === '',\n          onClick: () => getPrediction(),\n          className: classes.button,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        smUp: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          disabled: selection === '',\n          onClick: () => getPrediction(),\n          className: classes.buttonSmall,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputForm, \"kiA8wjbABun6oDIZTWzvQNplLsA=\", false, function () {\n  return [useStyles];\n});\n\n_c = InputForm;\nexport default InputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"sources":["/Users/davidsadowsky/Development/TrendInvestWeb/ui/src/Components/InputForm.js"],"names":["React","useState","makeStyles","withStyles","Button","Autocomplete","TextField","data","Grid","Hidden","useStyles","theme","form","backgroundColor","padding","spacing","borderRadius","boxShadow","display","flex","flexDirection","justifyContent","alignItems","button","color","textTransform","fontSize","paddingLeft","paddingRight","border","lineHeight","borderColor","fontFamily","buttonSmall","InputForm","setData","setIsLoading","classes","selection","setSelection","selectCoin","params","inputProps","value","getPrediction","interval","setInterval","fetch","method","mode","then","res","json","clearInterval","console","log","catch","error","option","title","width","paddingTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport TextField from '@material-ui/core/TextField'\nimport data from '../assets/crypto_data'\nimport Grid from '@material-ui/core/Grid'\nimport Hidden from '@material-ui/core/Hidden'\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n      backgroundColor: 'white',\n      padding: theme.spacing(5),\n      borderRadius: 5,\n      boxShadow: '0px 0px 10px 3px rgba(0, 0, 0, .3)',\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    button: {\n      color: 'white',\n      boxShadow: 'none',\n      textTransform: 'none',\n      fontSize: 14,\n      paddingLeft: theme.spacing(20),\n      paddingRight: theme.spacing(20),\n      border: '1px solid',\n      lineHeight: 1.5,\n      backgroundColor: '#1652F0',\n      borderColor: '#0063cc',\n      fontFamily: 'Red Hat Display',\n      '&:hover': {\n        backgroundColor: '#0069d9',\n        borderColor: '#0062cc',\n        boxShadow: 'none',\n      },\n      '&:active': {\n        boxShadow: 'none',\n        backgroundColor: '#0062cc',\n        borderColor: '#005cbf',\n      },\n      '&:focus': {\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n      },\n      '&:disabled': {\n        backgroundColor: '#bababa',\n        borderColor: '#bababa'\n      }\n    },\n    buttonSmall: {\n      color: 'white',\n      boxShadow: 'none',\n      textTransform: 'none',\n      fontSize: 14,\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      border: '1px solid',\n      lineHeight: 1.5,\n      backgroundColor: '#1652F0',\n      borderColor: '#0063cc',\n      fontFamily: 'Red Hat Display',\n      '&:hover': {\n        backgroundColor: '#0069d9',\n        borderColor: '#0062cc',\n        boxShadow: 'none',\n      },\n      '&:active': {\n        boxShadow: 'none',\n        backgroundColor: '#0062cc',\n        borderColor: '#005cbf',\n      },\n      '&:focus': {\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n      },\n      '&:disabled': {\n        backgroundColor: '#bababa',\n        borderColor: '#bababa'\n      }\n    }\n  }))\n\nconst InputForm = ({setData, setIsLoading}) => {\n    const classes = useStyles()\n    const [selection, setSelection] = useState('')\n\n    const selectCoin = (params) => {\n        setSelection(params.inputProps.value)\n        return <TextField {...params} fontFamily=\"Red Hat Display\" label=\"Coin\" variant=\"outlined\" />\n    }\n\n    const getPrediction = () => {\n      setIsLoading(true)\n      var interval = setInterval(async function() {\n        fetch('/predict?coinName=' + selection, {\n          method: \"GET\",\n          mode: \"cors\"\n          }).then(res => res.json().then(data => {\n            if (data.data !== 'Job running' && data.data !== 'Job started') {\n              setData(data.data)\n              setIsLoading(false)\n              clearInterval(interval)\n            }\n            else {\n              console.log(data)\n            }\n          }).catch((error) => {\n            console.error('Error:', error)\n            setIsLoading(false)\n        })\n      )}, 2000)\n    }\n\n    return (\n        <Grid container\n         direction=\"row\"\n         justify=\"center\"\n         alignItems=\"center\"\n         className={classes.form}\n        >\n          <Grid item xs={12}>\n            <Hidden xsDown>\n            <Autocomplete\n                id=\"combo-box-demo\"\n                options={data}\n                getOptionLabel={(option) => option.title}\n                style={{ width: 300 }}\n                renderInput={(params) => selectCoin(params)}\n            />\n            </Hidden>\n            <Hidden smUp>\n            <Autocomplete\n                id=\"combo-box-demo\"\n                options={data}\n                getOptionLabel={(option) => option.title}\n                style={{ width: 200 }}\n                renderInput={(params) => selectCoin(params)}\n            />\n            </Hidden>\n          </Grid>\n          <Grid item xs={12} style={{ paddingTop: 20}}>\n            <Hidden xsDown>\n              <Button \n               disabled={selection === ''} \n               onClick={() => getPrediction()}\n               className={classes.button}\n                >\n                    Submit\n              </Button>\n            </Hidden>\n            <Hidden smUp>\n            <Button \n               disabled={selection === ''} \n               onClick={() => getPrediction()}\n               className={classes.buttonSmall}\n                >\n                    Submit\n              </Button>\n            </Hidden>\n          </Grid>\n        </Grid>\n    );\n}\n\nexport default InputForm"]},"metadata":{},"sourceType":"module"}